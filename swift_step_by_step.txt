# Swift setup step by step 

#################update ubuntu system first 
sudo apt-get update
sudo apt-get install curl gcc memcached rsync sqlite3 xfsprogs git-core libffi-dev python-setuptools python-coverage python-dev python-nose python-simplejson python-xattr python-eventlet python-greenlet python-pastedeploy python-netifaces python-pip python-dnspython python-mock 

sudo apt-get install swift python-swiftclient openssh-server

#############config swift server
sudo mkdir -p /etc/swift
sudo chown -R swift:swift /etc/swift/
#create new swift.conf file
#It must be the same on every node in the cluster!:
/etc/swift/swift.conf 
[swift-hash]
# random unique strings that can never change (DO NOT LOSE)
swift_hash_path_prefix = `od -t x8 -N 8 -A n </dev/random`
swift_hash_path_suffix = `od -t x8 -N 8 -A n </dev/random`

mkdir -p /var/run/swift
chown swift:swift /var/run/swift
mkdir -p /var/cache/swift /srv/node/
chown swift:swift /var/cache/swift
chown swift:swift /srv/node

##################config storage node 
sudo apt-get install swift-account swift-container swift-object swift-object-expirer xfsprogs

/////////////////////////////////////////////config vm temp default//////////////////////////////
#new disk:
sudo fdisk list /dev/sdb
# set up a single partition
sudo fdisk /dev/sdb 
sudo mkfs.xfs -i size=512 /dev/sdb1


#Edit /etc/fstab and add:
/dev/sdb1 /srv/node/sdb1 xfs noatime,nodiratime,nobarrier,logbufs=8 0 0
sudo mkdir -p /srv/node/sdb1
sudo mount /srv/node/sdb1
sudo chown swift:swift /srv/node/sdb1

/////////////////////////////////////////////////////////////////////////////////////////////////


#rsync config  create config file /etc/rsyncd.conf
uid = swift
gid = swift
log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = 10.110.178.29

[account]
max connections = 25
path = /srv/node/
read only = false
lock file = /var/lock/account.lock

[container]
max connections = 25
path = /srv/node/
read only = false
lock file = /var/lock/container.lock

[object]
max connections = 25
path = /srv/node/
read only = false
lock file = /var/lock/object.lock
 

#Edit the RSYNC_ENABLE= line in /etc/default/rsync:
perl -pi -e 's/RSYNC_ENABLE=false/RSYNC_ENABLE=true/' /etc/default/rsync
#Start rsync daemon:
service rsync start

###Create /etc/swift/account-server.conf:
[DEFAULT]
bind_ip = 10.110.178.59
bind_port = 6002
workers = 2

[pipeline:main]
pipeline = account-server

[app:account-server]
use = egg:swift#account

[account-replicator]

[account-auditor]

[account-reaper]


###Create /etc/swift/container-server.conf:
[DEFAULT]
bind_ip = 10.110.178.29
bind_port = 6001
workers = 2

[pipeline:main]
pipeline = container-server

[app:container-server]
use = egg:swift#container

[container-replicator]

[container-updater]

[container-auditor]

[container-sync]

### Create /etc/swift/object-server.conf

[DEFAULT]
bind_ip = 10.110.178.29
bind_port = 6000
workers = 2

[pipeline:main]
pipeline = object-server

[app:object-server]
use = egg:swift#object

[object-replicator]

[object-updater]

[object-auditor]

###sudo vim /etc/swift/object-expirer.conf
[DEFAULT]

[object-expirer]
interval = 300

[pipeline:main]
pipeline = catch_errors cache proxy-server

[app:proxy-server]
use = egg:swift#proxy

[filter:cache]
use = egg:swift#memcache
memcache_servers = 10.110.178.21:6005,10.110.178.29:6005, 10.110.178.24:6005 , 10.110.178.59:6005



[filter:catch_errors]
use = egg:swift#catch_errors

# See object-expirer.conf-sample for options






####copy ring files to every node 


############config proxy server
 sudo apt-get install swift python-swiftclient openssh-server  rsync  swift-proxy memcached swift-account swift-container swift-object xfsprogs  
perl -pi -e "s/-l 127.0.0.1/-l 10.110.178.59/" /etc/memcached.conf
perl -pi -e "s/-l 11211/-l 6005/" /etc/memcached.conf
service memcached restart
#####/etc/swift/proxy-server.conf
[DEFAULT]
bind_ip =  server_ip
bind_port = 8080
workers = 1
user = devops
log_facility = LOG_LOCAL1
eventlet_debug = true

[pipeline:main]
# Yes, proxy-logging appears twice. This is so that
# middleware-originated requests get logged too.
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache bulk tempurl slo dlo ratelimit crossdomain tempauth staticweb container-quotas account-quotas proxy-logging proxy-server

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:bulk]
use = egg:swift#bulk

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:crossdomain]
use = egg:swift#crossdomain

[filter:dlo]
use = egg:swift#dlo

[filter:slo]
use = egg:swift#slo

[filter:tempurl]
use = egg:swift#tempurl

[filter:tempauth]
use = egg:swift#tempauth
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin http://10.110.124.75/v1/AUTH_system
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3

[filter:staticweb]
use = egg:swift#staticweb

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:cache]
use = egg:swift#memcache

[filter:gatekeeper]
use = egg:swift#gatekeeper

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true

[filter:cache]
use = egg:swift#memcache
memcache_servers = 10.110.178.29:6005 , 10.110.178.21:6005 , 10.110.178.24:6005 , 10.110.178.59:6005 





#####################################################################################################################################################################

##############Create the account, container and object rings.
cd /etc/swift
swift-ring-builder account.builder create 18 3 1
swift-ring-builder container.builder create 18 3 1
swift-ring-builder object.builder create 18 3 1
######## Assuming there are 5 zones with 1 node per zone, ZONE should start at 1 and increment by one for each additional node.
swift-ring-builder account.builder add z1-127.0.0.1:6002/sdb1 100
swift-ring-builder container.builder add z1-127.0.0.1:6001/sdb1 100
swift-ring-builder object.builder add z1-127.0.0.1:6000/sdb1 100

##################Verify the ring contents for each ring:
swift-ring-builder account.builder
swift-ring-builder container.builder
swift-ring-builder object.builder

##################Rebalance the rings:
swift-ring-builder account.builder rebalance
swift-ring-builder container.builder rebalance
swift-ring-builder object.builder rebalance

##########Copy the account.ring.gz, container.ring.gz, and object.ring.gz files to each of the Proxy and Storage nodes in /etc/swift.
#######Make sure all the config files are owned by the swift user:
chown -R swift:swift /etc/swift

#########Start Proxy services:
swift-init proxy start

#########################clean rings ################################
#!/bin/bash

cd /etc/swift

rm -f *.builder *.ring.gz backups/*.builder backups/*.ring.gz

sudo swift-ring-builder object.builder create 10 3 1
sudo swift-ring-builder object.builder add r1z1-10.110.178.55:6000/sdb1 100 
sudo swift-ring-builder object.builder rebalance
sudo swift-ring-builder container.builder create 10 3 1
sudo swift-ring-builder container.builder add r1z1-10.110.178.55:6001/sdb1 100
sudo swift-ring-builder container.builder rebalance
sudo swift-ring-builder account.builder create 10 3 1
sudo swift-ring-builder account.builder add r1z1-10.110.178.55:6002/sdb1 100
sudo swift-ring-builder account.builder rebalance



#################start all the service 



swift-init all start





#############test #######################
curl -v -H 'X-Storage-User: test:tester' -H 'X-Storage-Pass: testing' http://10.110.178.9:8080/auth/v1.0

##upload files 
swift -A http://10.110.178.59:8080/auth/v1.0 -U test:tester -K testing   upload myfiles   cf-mongodb.txt 

##download files 
swift -A http://10.110.178.59:8080/auth/v1.0 -U test:tester -K testing   download myfiles






